{"ast":null,"code":"var _jsxFileName = \"/home/burgo/Escritorio/COSAS PROYECTO/PROYECTO GRUPAL GIT CLONE/PG-TurnOn/src/Components/Login2.jsx\";\nimport { Formik } from \"formik\";\nimport React from \"react\";\n\nfunction Login2() {\n  var _this = this;\n\n  //   let array = [];\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      usuario: \"\",\n      password: \"\"\n    },\n    validate: function validate(valores) {\n      var errores = {};\n\n      if (!valores.usuario) {\n        errores.usuario = \"Por favor ingresa un correo electronico\";\n      } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.usuario)) {\n        errores.usuario = \"El mail solo puedo contener letras, numeros, puntos, guiones, y guion bajo.\";\n      }\n\n      if (!valores.password) {\n        errores.password = \"Por favor ingrese bien el password\";\n      }\n\n      return errores;\n    },\n    onSubmit: function onSubmit(valores) {\n      resetForm();\n      console.log(\"formulario enviado\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleSubmit = _ref.handleSubmit,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"usuario\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"usuario\",\n      name: \"usuario\",\n      placeholder: \"username\",\n      value: values.usuario,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), touched.usuario && errors.usuario && /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 51\n      }\n    }, errors.usuario)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Contrase\\xF1a\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), touched.password && errors.password && /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Login\"));\n  });\n}\n\nexport default Login2;","map":{"version":3,"sources":["/home/burgo/Escritorio/COSAS PROYECTO/PROYECTO GRUPAL GIT CLONE/PG-TurnOn/src/Components/Login2.jsx"],"names":["Formik","React","Login2","usuario","password","valores","errores","test","resetForm","console","log","values","errors","touched","handleSubmit","handleChange","handleBlur"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACA,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAE,EADI;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,QAAQ,EAAE,kBAACC,OAAD,EAAa;AACrB,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAI,CAACD,OAAO,CAACF,OAAb,EAAsB;AACpBG,QAAAA,OAAO,CAACH,OAAR,GAAkB,yCAAlB;AACD,OAFD,MAEO,IACL,CAAC,mDAAmDI,IAAnD,CACCF,OAAO,CAACF,OADT,CADI,EAIL;AACAG,QAAAA,OAAO,CAACH,OAAR,GACE,6EADF;AAED;;AACD,UAAI,CAACE,OAAO,CAACD,QAAb,EAAuB;AACrBE,QAAAA,OAAO,CAACF,QAAR,GAAmB,oCAAnB;AACD;;AACD,aAAOE,OAAP;AACD,KArBH;AAsBE,IAAA,QAAQ,EAAE,kBAACD,OAAD,EAAa;AACrBG,MAAAA,SAAS;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA2BG;AAAA,QACCC,MADD,QACCA,MADD;AAAA,QAECC,MAFD,QAECA,MAFD;AAAA,QAGCC,OAHD,QAGCA,OAHD;AAAA,QAICC,YAJD,QAICA,YAJD;AAAA,QAKCC,YALD,QAKCA,YALD;AAAA,QAMCC,UAND,QAMCA,UAND;AAAA,wBAQC;AAAM,MAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,SAFL;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,KAAK,EAAEH,MAAM,CAACR,OALhB;AAME,MAAA,QAAQ,EAAEY,YANZ;AAOE,MAAA,MAAM,EAAEC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGH,OAAO,CAACV,OAAR,IAAmBS,MAAM,CAACT,OAA1B,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMS,MAAM,CAACT,OAAb,CAXxC,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,KAAK,EAAEQ,MAAM,CAACP,QALhB;AAME,MAAA,QAAQ,EAAEW,YANZ;AAOE,MAAA,MAAM,EAAEC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGH,OAAO,CAACT,QAAR,IAAoBQ,MAAM,CAACR,QAA3B,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMQ,MAAM,CAACR,QAAb,CAZJ,CAdF,eA6BE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7BF,CARD;AAAA,GA3BH,CADF;AAsED;;AAED,eAAeF,MAAf","sourcesContent":["import { Formik } from \"formik\";\nimport React from \"react\";\n\nfunction Login2() {\n  //   let array = [];\n  return (\n    <Formik\n      initialValues={{\n        usuario: \"\",\n        password: \"\",\n      }}\n      validate={(valores) => {\n        let errores = {};\n        if (!valores.usuario) {\n          errores.usuario = \"Por favor ingresa un correo electronico\";\n        } else if (\n          !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(\n            valores.usuario\n          )\n        ) {\n          errores.usuario =\n            \"El mail solo puedo contener letras, numeros, puntos, guiones, y guion bajo.\";\n        }\n        if (!valores.password) {\n          errores.password = \"Por favor ingrese bien el password\";\n        }\n        return errores;\n      }}\n      onSubmit={(valores) => {\n        resetForm();\n        console.log(\"formulario enviado\");\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleSubmit,\n        handleChange,\n        handleBlur,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"usuario\">Email</label>\n            <input\n              type=\"text\"\n              id=\"usuario\"\n              name=\"usuario\"\n              placeholder=\"username\"\n              value={values.usuario}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {touched.usuario && errors.usuario && <div>{errors.usuario}</div>}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Contrase√±a</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {touched.password && errors.password && (\n              <div>{errors.password}</div>\n            )}\n          </div>\n          <button type=\"submit\">Login</button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default Login2;\n"]},"metadata":{},"sourceType":"module"}