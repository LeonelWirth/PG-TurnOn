{"ast":null,"code":"var _jsxFileName = \"/home/burgo/Escritorio/COSAS PROYECTO/PROYECTO GRUPAL GIT CLONE/PG-TurnOn/src/Components/Login2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login2() {\n  _s();\n\n  //   let array = [];\n  const [formEnviado, setFormEnviado] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      usuario: \"\",\n      password: \"\"\n    },\n    validate: valores => {\n      let errores = {};\n\n      if (!valores.usuario) {\n        errores.usuario = \"Por favor ingresa un correo electronico\";\n      } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.usuario)) {\n        errores.usuario = \"El mail solo puedo contener letras, numeros, puntos, guiones, y guion bajo.\";\n      }\n\n      if (!valores.password) {\n        errores.password = \"Por favor ingrese bien el password\";\n      }\n\n      return errores;\n    },\n    onSubmit: (valores, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      resetForm();\n      console.log(\"formulario enviado\");\n      setFormEnviado(true);\n      setTimeout(() => setFormEnviado(false), 5000);\n    },\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleSubmit,\n        handleChange,\n        handleBlur\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"usuario\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"usuario\",\n            name: \"usuario\",\n            placeholder: \"username\",\n            value: values.usuario,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), touched.usuario && errors.usuario && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.usuario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), formEnviado && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Formulario enviado con exito!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login2, \"DFe9yzZh47Sx6aVwPELpJBhsr0c=\");\n\n_c = Login2;\nexport default Login2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"sources":["/home/burgo/Escritorio/COSAS PROYECTO/PROYECTO GRUPAL GIT CLONE/PG-TurnOn/src/Components/Login2.jsx"],"names":["React","useState","Formik","Login2","formEnviado","setFormEnviado","usuario","password","valores","errores","test","resetForm","console","log","setTimeout","values","errors","touched","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Formik } from \"formik\";\n\nfunction Login2() {\n  //   let array = [];\n  const [formEnviado, setFormEnviado] = useState(false);\n  return (\n    <Formik\n      initialValues={{\n        usuario: \"\",\n        password: \"\",\n      }}\n      validate={(valores) => {\n        let errores = {};\n        if (!valores.usuario) {\n          errores.usuario = \"Por favor ingresa un correo electronico\";\n        } else if (\n          !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(\n            valores.usuario\n          )\n        ) {\n          errores.usuario =\n            \"El mail solo puedo contener letras, numeros, puntos, guiones, y guion bajo.\";\n        }\n        if (!valores.password) {\n          errores.password = \"Por favor ingrese bien el password\";\n        }\n        return errores;\n      }}\n      onSubmit={(valores, { resetForm }) => {\n        resetForm();\n        console.log(\"formulario enviado\");\n        setFormEnviado(true);\n        setTimeout(() => setFormEnviado(false), 5000);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleSubmit,\n        handleChange,\n        handleBlur,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"usuario\">Email</label>\n            <input\n              type=\"text\"\n              id=\"usuario\"\n              name=\"usuario\"\n              placeholder=\"username\"\n              value={values.usuario}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {touched.usuario && errors.usuario && <div>{errors.usuario}</div>}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Contrase√±a</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {touched.password && errors.password && (\n              <div>{errors.password}</div>\n            )}\n          </div>\n          <button type=\"submit\">Login</button>\n          {formEnviado && <p>Formulario enviado con exito!</p>}\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default Login2;\n"]},"metadata":{},"sourceType":"module"}